<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.5.7</version>
		<relativePath></relativePath>
		<!-- lookup parent from repository -->
	</parent>
	<groupId>com.challenge</groupId>
	<artifactId>movies</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<name>movies</name>
	<description>Movies API</description>
	<url></url>
	<properties>
		<bucket4j.version>8.10.1</bucket4j.version>
		<commons-lang3.version>3.19.0</commons-lang3.version>
		<findsecbugs.version>1.13.0</findsecbugs.version>
		<google-java-format.version>1.17.0</google-java-format.version>
		<jacoco.version>0.8.12</jacoco.version>
		<java.version>21</java.version>
		<lombok.version>1.18.38</lombok.version>

		<!-- Dependency versions -->
		<mapstruct.version>1.5.5.Final</mapstruct.version>
		<maven-checkstyle.version>3.5.0</maven-checkstyle.version>
		<maven-pmd.version>3.25.0</maven-pmd.version>
		<spotbugs.version>4.8.6.4</spotbugs.version>

		<!-- Plugin versions -->
		<spotless.version>2.43.0</spotless.version>
		<spring-cloud.version>2025.0.0</spring-cloud.version>
		<springdoc.version>2.8.4</springdoc.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>${spring-cloud.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>
	<dependencies>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>

		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-devtools</artifactId>
			<scope>runtime</scope>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.projectlombok</groupId>
			<artifactId>lombok</artifactId>
			<optional>true</optional>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mapstruct</groupId>
			<artifactId>mapstruct</artifactId>
			<version>${mapstruct.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.cloud</groupId>
			<artifactId>spring-cloud-starter-openfeign</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springdoc</groupId>
			<artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
			<version>${springdoc.version}</version>
			<exclusions>
				<exclusion>
					<groupId>org.apache.commons</groupId>
					<artifactId>commons-lang3</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		<!-- Override vulnerable commons-lang3 version -->
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-cache</artifactId>
		</dependency>
		<dependency>
			<groupId>com.github.ben-manes.caffeine</groupId>
			<artifactId>caffeine</artifactId>
		</dependency>
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-data-redis</artifactId>
		</dependency>
		<!-- Rate Limiting -->
		<dependency>
			<groupId>com.bucket4j</groupId>
			<artifactId>bucket4j-core</artifactId>
			<version>${bucket4j.version}</version>
		</dependency>
		<!-- OAuth2 Resource Server -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-oauth2-resource-server</artifactId>
		</dependency>
		<!-- Actuator for health checks and monitoring -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-actuator</artifactId>
		</dependency>
	</dependencies>

	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<annotationProcessorPaths>
						<path>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
							<version>${lombok.version}</version>
						</path>
						<path>
							<groupId>org.mapstruct</groupId>
							<artifactId>mapstruct-processor</artifactId>
							<version>${mapstruct.version}</version>
						</path>
						<path>
							<groupId>org.springframework.boot</groupId>
							<artifactId>spring-boot-configuration-processor</artifactId>
						</path>
					</annotationProcessorPaths>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<configuration>
					<excludes>
						<exclude>
							<groupId>org.projectlombok</groupId>
							<artifactId>lombok</artifactId>
						</exclude>
					</excludes>
				</configuration>
			</plugin>

			<!-- Spotless for code formatting -->
			<plugin>
				<groupId>com.diffplug.spotless</groupId>
				<artifactId>spotless-maven-plugin</artifactId>
				<version>${spotless.version}</version>
				<configuration>
					<java>
						<googleJavaFormat>
							<version>${google-java-format.version}</version>
							<style>GOOGLE</style>
						</googleJavaFormat>
						<removeUnusedImports></removeUnusedImports>
						<trimTrailingWhitespace></trimTrailingWhitespace>
						<endWithNewline></endWithNewline>
						<importOrder>
							<order>java|javax,jakarta,org,com,com.diffplug,</order>
						</importOrder>
					</java>
					<pom>
						<includes>
							<include>pom.xml</include>
						</includes>
						<sortPom>
							<encoding>UTF-8</encoding>
							<lineSeparator>${line.separator}</lineSeparator>
							<expandEmptyElements>true</expandEmptyElements>
							<spaceBeforeCloseEmptyElement>false</spaceBeforeCloseEmptyElement>
							<keepBlankLines>true</keepBlankLines>
							<nrOfIndentSpace>-1</nrOfIndentSpace>
							<indentBlankLines>false</indentBlankLines>
							<indentSchemaLocation>false</indentSchemaLocation>
							<predefinedSortOrder>recommended_2008_06</predefinedSortOrder>
							<sortProperties>true</sortProperties>
							<sortModules>true</sortModules>
							<sortExecutions>true</sortExecutions>
						</sortPom>
					</pom>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>compile</phase>
					</execution>
				</executions>
			</plugin>

			<!-- PMD for static code analysis -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-pmd-plugin</artifactId>
				<version>${maven-pmd.version}</version>
				<configuration>
					<targetJdk>21</targetJdk>
					<rulesets>
						<ruleset>.quality/pmd/ruleset.xml</ruleset>
					</rulesets>
					<excludeRoots>
						<excludeRoot>target/generated-sources</excludeRoot>
					</excludeRoots>
					<printFailingErrors>true</printFailingErrors>
					<failOnViolation>true</failOnViolation>
					<minimumPriority>2</minimumPriority>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>

			<!-- SpotBugs for bug detection -->
			<plugin>
				<groupId>com.github.spotbugs</groupId>
				<artifactId>spotbugs-maven-plugin</artifactId>
				<version>${spotbugs.version}</version>
				<configuration>
					<effort>Max</effort>
					<threshold>Low</threshold>
					<failOnError>true</failOnError>
					<includeFilterFile>.quality/spotbugs/include-filter.xml</includeFilterFile>
					<excludeFilterFile>.quality/spotbugs/exclude-filter.xml</excludeFilterFile>
					<plugins>
						<plugin>
							<groupId>com.h3xstream.findsecbugs</groupId>
							<artifactId>findsecbugs-plugin</artifactId>
							<version>${findsecbugs.version}</version>
						</plugin>
					</plugins>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>verify</phase>
					</execution>
				</executions>
			</plugin>

			<!-- Checkstyle for code style -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-checkstyle-plugin</artifactId>
				<version>${maven-checkstyle.version}</version>
				<configuration>
					<configLocation>google_checks.xml</configLocation>
					<consoleOutput>true</consoleOutput>
					<failsOnError>true</failsOnError>
					<linkXRef>false</linkXRef>
				</configuration>
				<executions>
					<execution>
						<id>validate</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>validate</phase>
					</execution>
				</executions>
			</plugin>

			<!-- JaCoCo for code coverage -->
			<plugin>
				<groupId>org.jacoco</groupId>
				<artifactId>jacoco-maven-plugin</artifactId>
				<version>${jacoco.version}</version>
				<configuration>
					<excludes>
						<!-- Exclude generated classes -->
						<exclude>**/infrastructure/client/mapper/*Impl.class</exclude>
						<!-- Exclude DTOs -->
						<exclude>**/infrastructure/client/dto/*.class</exclude>
						<!-- Exclude configuration classes -->
						<exclude>**/infrastructure/config/*.class</exclude>
						<!-- Exclude main application class -->
						<exclude>**/MoviesApplication.class</exclude>
					</excludes>
				</configuration>
				<executions>
					<execution>
						<id>prepare-agent</id>
						<goals>
							<goal>prepare-agent</goal>
						</goals>
					</execution>
					<execution>
						<id>report</id>
						<goals>
							<goal>report</goal>
						</goals>
						<phase>test</phase>
					</execution>
					<execution>
						<id>jacoco-check</id>
						<goals>
							<goal>check</goal>
						</goals>
						<phase>verify</phase>
						<configuration>
							<rules>
								<rule>
									<element>BUNDLE</element>
									<limits>
										<limit>
											<counter>LINE</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.80</minimum>
										</limit>
										<limit>
											<counter>BRANCH</counter>
											<value>COVEREDRATIO</value>
											<minimum>0.75</minimum>
										</limit>
									</limits>
								</rule>
							</rules>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
